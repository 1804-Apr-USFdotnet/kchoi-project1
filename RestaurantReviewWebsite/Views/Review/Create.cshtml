@model RestaurantReviewWebsite.Models.ReviewPageViewModel

@{
    ViewBag.Title = "Add New Review";
}

<h4>@ViewBag.ErrorMessage</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Review</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RestaurantID, new { htmlAttributes = new { @class = "form-control", @Value = Model.RestaurantID } })
        @Html.HiddenFor(model => model.ReviewerName, new { htmlAttributes = new { @class = "form-control", @Value = Model.ReviewerName } })

        <div class="form-group">
            @Html.LabelFor(model => model.Review.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Review.Rating, new { htmlAttributes = new { @class = "form-control", min = 1, max = 5 } })
                @Html.ValidationMessageFor(model => model.Review.Rating, "values from 1 to 5", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Review.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Review.Description, new { htmlAttributes = new { @class = "form-control", pattern = "^[A-Za-z 0-9]{0,200}$" } })
                @Html.ValidationMessageFor(model => model.Review.Description, "200 character limit", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Cancel", "List", new { id = Model.RestaurantID })
            </div>
        </div>
    </div>
}
