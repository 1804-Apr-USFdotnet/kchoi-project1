@model PagedList.IPagedList<LibraryProject.Restaurant>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Search Results";
}
<p>
    @Html.ActionLink("Add New Restaurant", "Create", "Restaurant")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Search", new { orderBy = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("Average Rating", "Search", new { orderBy = ViewBag.RatingSortParm })
        </th>
        <th>
            Address
        </th>
        <th>
            City
        </th>
        <th>
            State
        </th>
        <th>
            ZIP
        </th>
        <th>
            Phone Number
        </th>
        <th></th>
    </tr>
 @if (Model.Count > 0) {
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AvgRating)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZIP)
            </td>
            <td>
                @(!String.IsNullOrEmpty(item.PhoneNum) ? Html.DisplayFor(modelItem => item.PhoneNum) : Html.Raw("N/A"))
            </td>
            <td>
                @Html.ActionLink("Edit", "Update", "Restaurant", new { id = item.ID }, null) |
                @Html.ActionLink("Details", "Details", "Restaurant", new { id = item.ID }, null) |
                @Html.ActionLink("Delete", "Delete", "Restaurant", new { id = item.ID }, null)
            </td>
        </tr>
    }
 } else
 {
     <tr>There are no restaurants to display.</tr>
 }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@ViewBag.CurrentSort
@Html.PagedListPager(Model, page => Url.Action("Search",
    new { page, orderBy = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
